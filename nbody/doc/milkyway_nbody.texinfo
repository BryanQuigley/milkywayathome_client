\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename milkyway.info
@settitle Milkyway N-Body Manual 1.0
@c %**end of header


@copying

@author{} Matt Arsenault
@today{}
Copyright @copyright{} 2011 Rensselaer Polytechnic Institute
@end copying


@titlepage
@title Milkyway N-Body Manual

@c The following two commands start the copyright page.
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@c Output the table of contents at the beginning.
@contents



@ifnottex
@node Top
@top Short Sample

This is a short sample Texinfo file.
@end ifnottex

@menu
* First Chapter::    The first chapter is the
                       only chapter in this sample.
* Index::            Complete index.
@end menu


@node Building
@chapter Building

@cindex build, cmake

Instructions on building

@unnumberedsec Build Options


@node Basic Usage
@chapter Basic Usage

@cindex usage, basic



Extra arguments are forwarded to the Lua input script.
Seed bound to ``argSeed''




@chapter Algorithmic Considerations
@cindex algorithmic considerations
@cindex algorithm
@cindex Barnes-Hut

Milkyway N-Body uses the Barnes-Hut algorithm, or optionally can use
the direct summation.

@anchor {criteria-description}
@unnumberedsec Opening Criteria
@multitable @columnfractions .2 .8
@headitem Name @tab Description

@item @code{"BH86"}
@tab Use classic Barnes-Hut opening angle

@item @code{"SW93"}
@tab Use sum squares criterion from S&W '93 paper

@item @code{"NewCriterion"}
@tab Barnes newer opening criterion using the center of mass offset

@item @code{"Exact"}
@tab Use O(n^2) direct N-body calculation
@end multitable



@node Required Functions
@chapter Required Functions

An N-Body simulation is set up by writing several small functions in
the input Lua script. This allows for a totally arbitrary initial
distribution of particles and flexible calculations for any parameters.

@deffn required function makeContext ()
Returns the context for controlling the simulation. This configures
basic items such as timestep size and evolution time.
@xref{NBodyCtx type}
@end deffn


@deffn required function makeBodies (context, potential)
Takes the NBodyCtx for the simulation, and the Potential if used
Return an arbitrary number of table of bodies which will run in the simulation.
@xref{Body type}
@end deffn


@deffn required function makePotential ()
Returns the external potential to apply to the simulation.
Options are one of the following:

@itemize @bullet
@item
nil. A generic N-body simulation with no external potential.

@item
A galaxy external potential defined by the Potential type. @xref{Potential type}

@item
A Lua function which takes 3 arguments (x, y, z) positions in standard
galactic coordinates and returns 3 numbers for the (x, y, z)
components of the acceleration. Invalid to use when running with OpenCL.
@end itemize
@end deffn


@deffn optional function makeHistogram ()
Parameters for a milkyway histogram if generating it.
@xref{HistogramParams type}
@end deffn


@node Custom Lua Types
@chapter Lua Userdata Types

@cindex types, Lua

Items marked with a * are optional and will use a default value if omitted.
@cindex index entry, another

@node NBodyCtx type
@unnumberedsec NBodyCtx

@unnumberedsubsec NBodyCtx.create()
@multitable @columnfractions .15 .15 .7
@headitem Argument @tab Type @tab Description

@item @code{timestep}
@tab @code{number}
@tab Size of timesteps to use in gigayears
@item @code{timeEvolve}
@tab @code{number}
@tab Time to run simulation in gigayears
@item @code{theta}
@tab @code{number}
@tab Barnes-Hut opening angle (ignored with "Exact" criterion")
@item @code{eps2}
@tab @code{number}
@tab (softening parameter)^2 in kiloparsecs^2
@item @code{treeRSize}*
@tab @code{number}
@tab Initial size guess of tree root cell
@item @code{sunGCDist}*
@tab @code{number}
@tab Distance from galactic center to Earth in kiloparsecs
@item @code{criterion}
@tab @code{string enum}
@tab Select formula for calculating critical radius. For options, see @xref{criteria-description, criteria description}
@item @code{useQuad}*
@tab @code{boolean}
@tab Use quadrupole moments for body-cell force calculations
@item @code{allowIncest}*
@tab @code{boolean}
@tab Treat tree incest as fatal.
Incest is when a particle does not encounter itself while calculating forces on it
@item @code{quietErrors}*
@tab @code{boolean}
@tab Silence printing of certain errors, such as tree incest.
     Most useful when treating incest as non-fatal.

@end multitable

@node Body type
@unnumberedsec Body

@unnumberedsubsec Body.create()
@multitable @columnfractions .15 .15 .7
@headitem Argument @tab Type @tab Description

@item @code{mass}
@tab @code{number}
@tab Mass of body in units of 1/(222288.47 M_sun). This is to get G =
1 with distances in kiloparsecs and time in gigayears
@item @code{position}
@tab @code{Vector}
@tab Postion of body in Cartesian, standard galactic coordinates
@item @code{velocity}
@tab @code{Vector}
@tab Velocity of body in kiloparsecs / gigayear
@item @code{ignore}*
@tab @code{boolean}
@tab Ignore body if doing a likelihood calculation (e.g. dark matter particle = true)

@end multitable

@node Potential type
@unnumberedsec Potential

@unnumberedsubsec Potential.create()
@multitable @columnfractions .15 .15 .7
@headitem Argument @tab Type @tab Description

@item @code{spherical}
@tab @code{Spherical}
@tab Spherical bulge component of galaxy potential
@item @code{halo}
@tab @code{Halo}
@tab Halo component of galaxy potential
@item @code{halo}
@tab @code{Halo}
@tab Halo component of galaxy potential
@item @code{disk}
@tab @code{Disk}
@tab Disk component of galaxy potential

@end multitable


@unnumberedsec Spherical

@unnumberedsubsec Spherical.spherical()
@multitable @columnfractions .15 .15 .7
@headitem Argument @tab Type @tab Description

@item @code{mass}
@tab @code{number}
@tab Mass of bulge
@item @code{scaleLength}
@tab @code{number}
@tab Scale length ``a'' of bulge

@end multitable


@unnumberedsec Disk

@unnumberedsubsec Disk.miyamotoNagai()
@multitable @columnfractions .15 .15 .7
@headitem Argument @tab Type @tab Description

@item @code{mass}
@tab @code{number}
@tab Mass of disk
@item @code{scaleLength}
@tab @code{number}
@tab Scale length ``a''
@item @code{scaleHeight}
@tab @code{number}
@tab Scale height ``b''

@end multitable


@unnumberedsubsec Disk.exponential()
@multitable @columnfractions .15 .15 .7
@headitem Argument @tab Type @tab Description

@item @code{mass}
@tab @code{number}
@tab Mass of disk
@item @code{scaleLength}
@tab @code{number}
@tab Scale length ``b''

@end multitable



@unnumberedsec Halo

@unnumberedsubsec Halo.logarithmic()
@multitable @columnfractions .15 .15 .7
@headitem Argument @tab Type @tab Description

@item @code{vhalo}
@tab @code{number}
@tab Halo speed (contains total halo mass)
@item @code{scaleLength}
@tab @code{number}
@tab Scale length ``d'' of halo
@item @code{flattenZ}
@tab @code{number}
@tab Z-axis flattening

@end multitable


@unnumberedsubsec Halo.nfw()
@multitable @columnfractions .15 .15 .7
@headitem Argument @tab Type @tab Description

@item @code{vhalo}
@tab @code{number}
@tab Halo speed (contains total halo mass)
@item @code{scaleLength}
@tab @code{number}
@tab Scale length ``d'' of halo

@end multitable


@unnumberedsubsec Halo.triaxial()
@multitable @columnfractions .15 .15 .7
@headitem Argument @tab Type @tab Description

@item @code{vhalo}
@tab @code{number}
@tab Halo speed (contains total halo mass)
@item @code{scaleLength}
@tab @code{number}
@tab Scale length ``rhalo'' of halo
@item @code{flattenX}
@tab @code{number}
@tab Flattening in direction 1
@item @code{flattenY}
@tab @code{number}
@tab Flattening in direction 2
@item @code{flattenZ}
@tab @code{number}
@tab Z-Axis flattening
@item @code{triaxAngle}
@tab @code{number}
@tab Triaxiality angle ``phi''

@end multitable

@node HistogramParams type
@unnumberedsec HistogramParams
Used to specify histogram parameters for binning along a stream in
Lambda. Currently not that generally useful.
@unnumberedsubsec HistogramParams.create()
@multitable @columnfractions .15 .15 .7
@headitem Argument @tab Type @tab Description

@item @code{phi}
@tab @code{number}
@tab ``phi''
@item @code{theta}
@tab @code{number}
@tab ``theta''
@item @code{startRaw}
@tab @code{number}
@tab Lambda to try start bins if creating a milkyway histogram
@item @code{startRaw}
@tab @code{number}
@tab Lambda to try ending bins if creating a milkyway histogram
@item @code{center}
@tab @code{number}
@tab Center of histogram in lambda
@item @code{binSize}
@tab @code{number}
@tab Bin size in lambda in degrees

@end multitable


@node Utility functions
@chapter Utility functions

@cindex utilities

Miscellaneous useful functions for coordinate conversions, model
creation, etc.

@deffn utility function plummerTimestepIntegral (smalla, biga, Md, step)


@end deffn



@node Milkyway N-Body Invocation
@appendix Command Line Arguments for Milkyway N-Body Invocation
@cindex command line arguments
@cindex arguments (command line)
@cindex options (command line)
@cindex switches (command line)
@cindex startup (command line arguments)
@cindex invocation (command line arguments)

Milkyway N-Body uses various command line switches to control the
simulation and output. Extra arguments are forwarded on to the Lua
input file. All arguments accept long form (two dashes,
e.g. --argument-name) and most accept short form as well (one dash,
e.g. -a).

@node Arguments
@appendixsec Arguments

  Here is a table of action arguments:

@table @samp
@item -f @var{file}
@itemx --input-file=@var{file}
@cindex lua, input, command-line argument
Use the @var{file} as the primary input Lua script

@item -h @var{file}
@itemx --histogram-file=@var{file}
@cindex histogram, input, command-line argument
Use the @var{file} as input histogram to match

@item -z @var{file}
@itemx --histoout-file=@var{file}
@cindex histogram, output, command-line argument
Write a result histogram to file @var{file}

@item -o @var{file}
@itemx --output-file=@var{file}
@cindex output, command-line argument
Write resulting body status to file @var{file}

@item -x
@itemx --output-cartesian
@cindex output, command-line argument, coordinates
Write body positions to output in standard galactic coordinates
instead of the default lbr.

@item -v
@itemx --verify-file
@cindex input, command-line argument, BOINC
Only verify that everything is valid with the input file for testing
workunits. Tests for errors and prints some information about the
context. Do not actually run a simulation.

@item -n @var{nthread}
@itemx --nthreads @var{nthread}
@cindex command-line argument, OpenMP, threads
Select uses @var{nthread} threads to run standard simulation with. Ignored if
built without OpenMP support.

@item -e @var{seed}
@itemx --seed @var{seed}
@cindex command-line argument, random, seed
Passes the random number seed @var{seed} to input Lua script

@item --verbose
@cindex command-line argument, debug
Print more detailed information than normally would happen. Combined
with --version, will print commit ID



@end table


@node Index
@unnumbered Index

@printindex cp

@bye

